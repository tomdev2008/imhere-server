// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LocationProtos.proto

package org.xiaoxiancai.imhere.common.protos.business;

public final class LocationProtos {
  private LocationProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface LocationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.xiaoxiancai.imhere.server.business.protos.Location)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 userId = 1;</code>
     */
    boolean hasUserId();
    /**
     * <code>required int32 userId = 1;</code>
     */
    int getUserId();

    /**
     * <code>required int32 locType = 2;</code>
     *
     * <pre>
     * 61 ： GPS定位结果
     * 62 ： 扫描整合定位依据失败。此时定位结果无效。
     * 63 ： 网络异常，没有成功向服务器发起请求。此时定位结果无效。
     * 65 ： 定位缓存的结果。
     * 66 ： 离线定位结果。通过requestOfflineLocaiton调用时对应的返回结果
     * 67 ： 离线定位失败。通过requestOfflineLocaiton调用时对应的返回结果
     * 68 ： 网络连接失败时，查找本地离线定位时对应的返回结果
     * 161： 表示网络定位结果
     * 162~167： 服务端定位失败。
     * </pre>
     */
    boolean hasLocType();
    /**
     * <code>required int32 locType = 2;</code>
     *
     * <pre>
     * 61 ： GPS定位结果
     * 62 ： 扫描整合定位依据失败。此时定位结果无效。
     * 63 ： 网络异常，没有成功向服务器发起请求。此时定位结果无效。
     * 65 ： 定位缓存的结果。
     * 66 ： 离线定位结果。通过requestOfflineLocaiton调用时对应的返回结果
     * 67 ： 离线定位失败。通过requestOfflineLocaiton调用时对应的返回结果
     * 68 ： 网络连接失败时，查找本地离线定位时对应的返回结果
     * 161： 表示网络定位结果
     * 162~167： 服务端定位失败。
     * </pre>
     */
    int getLocType();

    /**
     * <code>required double latitude = 3;</code>
     *
     * <pre>
     * 维度
     * </pre>
     */
    boolean hasLatitude();
    /**
     * <code>required double latitude = 3;</code>
     *
     * <pre>
     * 维度
     * </pre>
     */
    double getLatitude();

    /**
     * <code>required double Longitude = 4;</code>
     *
     * <pre>
     * 经度
     * </pre>
     */
    boolean hasLongitude();
    /**
     * <code>required double Longitude = 4;</code>
     *
     * <pre>
     * 经度
     * </pre>
     */
    double getLongitude();

    /**
     * <code>optional float speed = 5;</code>
     *
     * <pre>
     * 速度
     * </pre>
     */
    boolean hasSpeed();
    /**
     * <code>optional float speed = 5;</code>
     *
     * <pre>
     * 速度
     * </pre>
     */
    float getSpeed();

    /**
     * <code>optional double altitude = 6;</code>
     *
     * <pre>
     * 海拔
     * </pre>
     */
    boolean hasAltitude();
    /**
     * <code>optional double altitude = 6;</code>
     *
     * <pre>
     * 海拔
     * </pre>
     */
    double getAltitude();

    /**
     * <code>optional bool hasRadius = 7;</code>
     *
     * <pre>
     * 是否有定位精度半径
     * </pre>
     */
    boolean hasHasRadius();
    /**
     * <code>optional bool hasRadius = 7;</code>
     *
     * <pre>
     * 是否有定位精度半径
     * </pre>
     */
    boolean getHasRadius();

    /**
     * <code>optional float radius = 8;</code>
     *
     * <pre>
     * 定位精度半径
     * </pre>
     */
    boolean hasRadius();
    /**
     * <code>optional float radius = 8;</code>
     *
     * <pre>
     * 定位精度半径
     * </pre>
     */
    float getRadius();

    /**
     * <code>optional string addrStr = 9;</code>
     *
     * <pre>
     * 位置的文字描述信息
     * </pre>
     */
    boolean hasAddrStr();
    /**
     * <code>optional string addrStr = 9;</code>
     *
     * <pre>
     * 位置的文字描述信息
     * </pre>
     */
    java.lang.String getAddrStr();
    /**
     * <code>optional string addrStr = 9;</code>
     *
     * <pre>
     * 位置的文字描述信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getAddrStrBytes();
  }
  /**
   * Protobuf type {@code org.xiaoxiancai.imhere.server.business.protos.Location}
   */
  public static final class Location extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.xiaoxiancai.imhere.server.business.protos.Location)
      LocationOrBuilder {
    // Use Location.newBuilder() to construct.
    private Location(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Location(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Location defaultInstance;
    public static Location getDefaultInstance() {
      return defaultInstance;
    }

    public Location getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Location(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              userId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              locType_ = input.readInt32();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              latitude_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              longitude_ = input.readDouble();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              speed_ = input.readFloat();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              altitude_ = input.readDouble();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              hasRadius_ = input.readBool();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              radius_ = input.readFloat();
              break;
            }
            case 74: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000100;
              addrStr_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.xiaoxiancai.imhere.common.protos.business.LocationProtos.internal_static_org_xiaoxiancai_imhere_server_business_protos_Location_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.xiaoxiancai.imhere.common.protos.business.LocationProtos.internal_static_org_xiaoxiancai_imhere_server_business_protos_Location_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location.class, org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location.Builder.class);
    }

    public static com.google.protobuf.Parser<Location> PARSER =
        new com.google.protobuf.AbstractParser<Location>() {
      public Location parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Location(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Location> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int USERID_FIELD_NUMBER = 1;
    private int userId_;
    /**
     * <code>required int32 userId = 1;</code>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 userId = 1;</code>
     */
    public int getUserId() {
      return userId_;
    }

    public static final int LOCTYPE_FIELD_NUMBER = 2;
    private int locType_;
    /**
     * <code>required int32 locType = 2;</code>
     *
     * <pre>
     * 61 ： GPS定位结果
     * 62 ： 扫描整合定位依据失败。此时定位结果无效。
     * 63 ： 网络异常，没有成功向服务器发起请求。此时定位结果无效。
     * 65 ： 定位缓存的结果。
     * 66 ： 离线定位结果。通过requestOfflineLocaiton调用时对应的返回结果
     * 67 ： 离线定位失败。通过requestOfflineLocaiton调用时对应的返回结果
     * 68 ： 网络连接失败时，查找本地离线定位时对应的返回结果
     * 161： 表示网络定位结果
     * 162~167： 服务端定位失败。
     * </pre>
     */
    public boolean hasLocType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 locType = 2;</code>
     *
     * <pre>
     * 61 ： GPS定位结果
     * 62 ： 扫描整合定位依据失败。此时定位结果无效。
     * 63 ： 网络异常，没有成功向服务器发起请求。此时定位结果无效。
     * 65 ： 定位缓存的结果。
     * 66 ： 离线定位结果。通过requestOfflineLocaiton调用时对应的返回结果
     * 67 ： 离线定位失败。通过requestOfflineLocaiton调用时对应的返回结果
     * 68 ： 网络连接失败时，查找本地离线定位时对应的返回结果
     * 161： 表示网络定位结果
     * 162~167： 服务端定位失败。
     * </pre>
     */
    public int getLocType() {
      return locType_;
    }

    public static final int LATITUDE_FIELD_NUMBER = 3;
    private double latitude_;
    /**
     * <code>required double latitude = 3;</code>
     *
     * <pre>
     * 维度
     * </pre>
     */
    public boolean hasLatitude() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double latitude = 3;</code>
     *
     * <pre>
     * 维度
     * </pre>
     */
    public double getLatitude() {
      return latitude_;
    }

    public static final int LONGITUDE_FIELD_NUMBER = 4;
    private double longitude_;
    /**
     * <code>required double Longitude = 4;</code>
     *
     * <pre>
     * 经度
     * </pre>
     */
    public boolean hasLongitude() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required double Longitude = 4;</code>
     *
     * <pre>
     * 经度
     * </pre>
     */
    public double getLongitude() {
      return longitude_;
    }

    public static final int SPEED_FIELD_NUMBER = 5;
    private float speed_;
    /**
     * <code>optional float speed = 5;</code>
     *
     * <pre>
     * 速度
     * </pre>
     */
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float speed = 5;</code>
     *
     * <pre>
     * 速度
     * </pre>
     */
    public float getSpeed() {
      return speed_;
    }

    public static final int ALTITUDE_FIELD_NUMBER = 6;
    private double altitude_;
    /**
     * <code>optional double altitude = 6;</code>
     *
     * <pre>
     * 海拔
     * </pre>
     */
    public boolean hasAltitude() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional double altitude = 6;</code>
     *
     * <pre>
     * 海拔
     * </pre>
     */
    public double getAltitude() {
      return altitude_;
    }

    public static final int HASRADIUS_FIELD_NUMBER = 7;
    private boolean hasRadius_;
    /**
     * <code>optional bool hasRadius = 7;</code>
     *
     * <pre>
     * 是否有定位精度半径
     * </pre>
     */
    public boolean hasHasRadius() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool hasRadius = 7;</code>
     *
     * <pre>
     * 是否有定位精度半径
     * </pre>
     */
    public boolean getHasRadius() {
      return hasRadius_;
    }

    public static final int RADIUS_FIELD_NUMBER = 8;
    private float radius_;
    /**
     * <code>optional float radius = 8;</code>
     *
     * <pre>
     * 定位精度半径
     * </pre>
     */
    public boolean hasRadius() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float radius = 8;</code>
     *
     * <pre>
     * 定位精度半径
     * </pre>
     */
    public float getRadius() {
      return radius_;
    }

    public static final int ADDRSTR_FIELD_NUMBER = 9;
    private java.lang.Object addrStr_;
    /**
     * <code>optional string addrStr = 9;</code>
     *
     * <pre>
     * 位置的文字描述信息
     * </pre>
     */
    public boolean hasAddrStr() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string addrStr = 9;</code>
     *
     * <pre>
     * 位置的文字描述信息
     * </pre>
     */
    public java.lang.String getAddrStr() {
      java.lang.Object ref = addrStr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          addrStr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string addrStr = 9;</code>
     *
     * <pre>
     * 位置的文字描述信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAddrStrBytes() {
      java.lang.Object ref = addrStr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        addrStr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      userId_ = 0;
      locType_ = 0;
      latitude_ = 0D;
      longitude_ = 0D;
      speed_ = 0F;
      altitude_ = 0D;
      hasRadius_ = false;
      radius_ = 0F;
      addrStr_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLocType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLatitude()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLongitude()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, userId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, locType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, latitude_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, longitude_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, speed_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, altitude_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, hasRadius_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, radius_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getAddrStrBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, userId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, locType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, latitude_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, longitude_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, speed_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, altitude_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, hasRadius_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, radius_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getAddrStrBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.xiaoxiancai.imhere.server.business.protos.Location}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.xiaoxiancai.imhere.server.business.protos.Location)
        org.xiaoxiancai.imhere.common.protos.business.LocationProtos.LocationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.xiaoxiancai.imhere.common.protos.business.LocationProtos.internal_static_org_xiaoxiancai_imhere_server_business_protos_Location_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.xiaoxiancai.imhere.common.protos.business.LocationProtos.internal_static_org_xiaoxiancai_imhere_server_business_protos_Location_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location.class, org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location.Builder.class);
      }

      // Construct using org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        locType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        latitude_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        longitude_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        speed_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        altitude_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        hasRadius_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        radius_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        addrStr_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.xiaoxiancai.imhere.common.protos.business.LocationProtos.internal_static_org_xiaoxiancai_imhere_server_business_protos_Location_descriptor;
      }

      public org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location getDefaultInstanceForType() {
        return org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location.getDefaultInstance();
      }

      public org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location build() {
        org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location buildPartial() {
        org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location result = new org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.locType_ = locType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.latitude_ = latitude_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.longitude_ = longitude_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.speed_ = speed_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.altitude_ = altitude_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.hasRadius_ = hasRadius_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.radius_ = radius_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.addrStr_ = addrStr_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location) {
          return mergeFrom((org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location other) {
        if (other == org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location.getDefaultInstance()) return this;
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        if (other.hasLocType()) {
          setLocType(other.getLocType());
        }
        if (other.hasLatitude()) {
          setLatitude(other.getLatitude());
        }
        if (other.hasLongitude()) {
          setLongitude(other.getLongitude());
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        if (other.hasAltitude()) {
          setAltitude(other.getAltitude());
        }
        if (other.hasHasRadius()) {
          setHasRadius(other.getHasRadius());
        }
        if (other.hasRadius()) {
          setRadius(other.getRadius());
        }
        if (other.hasAddrStr()) {
          bitField0_ |= 0x00000100;
          addrStr_ = other.addrStr_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUserId()) {
          
          return false;
        }
        if (!hasLocType()) {
          
          return false;
        }
        if (!hasLatitude()) {
          
          return false;
        }
        if (!hasLongitude()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.xiaoxiancai.imhere.common.protos.business.LocationProtos.Location) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int userId_ ;
      /**
       * <code>required int32 userId = 1;</code>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 userId = 1;</code>
       */
      public int getUserId() {
        return userId_;
      }
      /**
       * <code>required int32 userId = 1;</code>
       */
      public Builder setUserId(int value) {
        bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 userId = 1;</code>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = 0;
        onChanged();
        return this;
      }

      private int locType_ ;
      /**
       * <code>required int32 locType = 2;</code>
       *
       * <pre>
       * 61 ： GPS定位结果
       * 62 ： 扫描整合定位依据失败。此时定位结果无效。
       * 63 ： 网络异常，没有成功向服务器发起请求。此时定位结果无效。
       * 65 ： 定位缓存的结果。
       * 66 ： 离线定位结果。通过requestOfflineLocaiton调用时对应的返回结果
       * 67 ： 离线定位失败。通过requestOfflineLocaiton调用时对应的返回结果
       * 68 ： 网络连接失败时，查找本地离线定位时对应的返回结果
       * 161： 表示网络定位结果
       * 162~167： 服务端定位失败。
       * </pre>
       */
      public boolean hasLocType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 locType = 2;</code>
       *
       * <pre>
       * 61 ： GPS定位结果
       * 62 ： 扫描整合定位依据失败。此时定位结果无效。
       * 63 ： 网络异常，没有成功向服务器发起请求。此时定位结果无效。
       * 65 ： 定位缓存的结果。
       * 66 ： 离线定位结果。通过requestOfflineLocaiton调用时对应的返回结果
       * 67 ： 离线定位失败。通过requestOfflineLocaiton调用时对应的返回结果
       * 68 ： 网络连接失败时，查找本地离线定位时对应的返回结果
       * 161： 表示网络定位结果
       * 162~167： 服务端定位失败。
       * </pre>
       */
      public int getLocType() {
        return locType_;
      }
      /**
       * <code>required int32 locType = 2;</code>
       *
       * <pre>
       * 61 ： GPS定位结果
       * 62 ： 扫描整合定位依据失败。此时定位结果无效。
       * 63 ： 网络异常，没有成功向服务器发起请求。此时定位结果无效。
       * 65 ： 定位缓存的结果。
       * 66 ： 离线定位结果。通过requestOfflineLocaiton调用时对应的返回结果
       * 67 ： 离线定位失败。通过requestOfflineLocaiton调用时对应的返回结果
       * 68 ： 网络连接失败时，查找本地离线定位时对应的返回结果
       * 161： 表示网络定位结果
       * 162~167： 服务端定位失败。
       * </pre>
       */
      public Builder setLocType(int value) {
        bitField0_ |= 0x00000002;
        locType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 locType = 2;</code>
       *
       * <pre>
       * 61 ： GPS定位结果
       * 62 ： 扫描整合定位依据失败。此时定位结果无效。
       * 63 ： 网络异常，没有成功向服务器发起请求。此时定位结果无效。
       * 65 ： 定位缓存的结果。
       * 66 ： 离线定位结果。通过requestOfflineLocaiton调用时对应的返回结果
       * 67 ： 离线定位失败。通过requestOfflineLocaiton调用时对应的返回结果
       * 68 ： 网络连接失败时，查找本地离线定位时对应的返回结果
       * 161： 表示网络定位结果
       * 162~167： 服务端定位失败。
       * </pre>
       */
      public Builder clearLocType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        locType_ = 0;
        onChanged();
        return this;
      }

      private double latitude_ ;
      /**
       * <code>required double latitude = 3;</code>
       *
       * <pre>
       * 维度
       * </pre>
       */
      public boolean hasLatitude() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double latitude = 3;</code>
       *
       * <pre>
       * 维度
       * </pre>
       */
      public double getLatitude() {
        return latitude_;
      }
      /**
       * <code>required double latitude = 3;</code>
       *
       * <pre>
       * 维度
       * </pre>
       */
      public Builder setLatitude(double value) {
        bitField0_ |= 0x00000004;
        latitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double latitude = 3;</code>
       *
       * <pre>
       * 维度
       * </pre>
       */
      public Builder clearLatitude() {
        bitField0_ = (bitField0_ & ~0x00000004);
        latitude_ = 0D;
        onChanged();
        return this;
      }

      private double longitude_ ;
      /**
       * <code>required double Longitude = 4;</code>
       *
       * <pre>
       * 经度
       * </pre>
       */
      public boolean hasLongitude() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required double Longitude = 4;</code>
       *
       * <pre>
       * 经度
       * </pre>
       */
      public double getLongitude() {
        return longitude_;
      }
      /**
       * <code>required double Longitude = 4;</code>
       *
       * <pre>
       * 经度
       * </pre>
       */
      public Builder setLongitude(double value) {
        bitField0_ |= 0x00000008;
        longitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double Longitude = 4;</code>
       *
       * <pre>
       * 经度
       * </pre>
       */
      public Builder clearLongitude() {
        bitField0_ = (bitField0_ & ~0x00000008);
        longitude_ = 0D;
        onChanged();
        return this;
      }

      private float speed_ ;
      /**
       * <code>optional float speed = 5;</code>
       *
       * <pre>
       * 速度
       * </pre>
       */
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float speed = 5;</code>
       *
       * <pre>
       * 速度
       * </pre>
       */
      public float getSpeed() {
        return speed_;
      }
      /**
       * <code>optional float speed = 5;</code>
       *
       * <pre>
       * 速度
       * </pre>
       */
      public Builder setSpeed(float value) {
        bitField0_ |= 0x00000010;
        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float speed = 5;</code>
       *
       * <pre>
       * 速度
       * </pre>
       */
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000010);
        speed_ = 0F;
        onChanged();
        return this;
      }

      private double altitude_ ;
      /**
       * <code>optional double altitude = 6;</code>
       *
       * <pre>
       * 海拔
       * </pre>
       */
      public boolean hasAltitude() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional double altitude = 6;</code>
       *
       * <pre>
       * 海拔
       * </pre>
       */
      public double getAltitude() {
        return altitude_;
      }
      /**
       * <code>optional double altitude = 6;</code>
       *
       * <pre>
       * 海拔
       * </pre>
       */
      public Builder setAltitude(double value) {
        bitField0_ |= 0x00000020;
        altitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double altitude = 6;</code>
       *
       * <pre>
       * 海拔
       * </pre>
       */
      public Builder clearAltitude() {
        bitField0_ = (bitField0_ & ~0x00000020);
        altitude_ = 0D;
        onChanged();
        return this;
      }

      private boolean hasRadius_ ;
      /**
       * <code>optional bool hasRadius = 7;</code>
       *
       * <pre>
       * 是否有定位精度半径
       * </pre>
       */
      public boolean hasHasRadius() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool hasRadius = 7;</code>
       *
       * <pre>
       * 是否有定位精度半径
       * </pre>
       */
      public boolean getHasRadius() {
        return hasRadius_;
      }
      /**
       * <code>optional bool hasRadius = 7;</code>
       *
       * <pre>
       * 是否有定位精度半径
       * </pre>
       */
      public Builder setHasRadius(boolean value) {
        bitField0_ |= 0x00000040;
        hasRadius_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hasRadius = 7;</code>
       *
       * <pre>
       * 是否有定位精度半径
       * </pre>
       */
      public Builder clearHasRadius() {
        bitField0_ = (bitField0_ & ~0x00000040);
        hasRadius_ = false;
        onChanged();
        return this;
      }

      private float radius_ ;
      /**
       * <code>optional float radius = 8;</code>
       *
       * <pre>
       * 定位精度半径
       * </pre>
       */
      public boolean hasRadius() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float radius = 8;</code>
       *
       * <pre>
       * 定位精度半径
       * </pre>
       */
      public float getRadius() {
        return radius_;
      }
      /**
       * <code>optional float radius = 8;</code>
       *
       * <pre>
       * 定位精度半径
       * </pre>
       */
      public Builder setRadius(float value) {
        bitField0_ |= 0x00000080;
        radius_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float radius = 8;</code>
       *
       * <pre>
       * 定位精度半径
       * </pre>
       */
      public Builder clearRadius() {
        bitField0_ = (bitField0_ & ~0x00000080);
        radius_ = 0F;
        onChanged();
        return this;
      }

      private java.lang.Object addrStr_ = "";
      /**
       * <code>optional string addrStr = 9;</code>
       *
       * <pre>
       * 位置的文字描述信息
       * </pre>
       */
      public boolean hasAddrStr() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string addrStr = 9;</code>
       *
       * <pre>
       * 位置的文字描述信息
       * </pre>
       */
      public java.lang.String getAddrStr() {
        java.lang.Object ref = addrStr_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            addrStr_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string addrStr = 9;</code>
       *
       * <pre>
       * 位置的文字描述信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAddrStrBytes() {
        java.lang.Object ref = addrStr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          addrStr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string addrStr = 9;</code>
       *
       * <pre>
       * 位置的文字描述信息
       * </pre>
       */
      public Builder setAddrStr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        addrStr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string addrStr = 9;</code>
       *
       * <pre>
       * 位置的文字描述信息
       * </pre>
       */
      public Builder clearAddrStr() {
        bitField0_ = (bitField0_ & ~0x00000100);
        addrStr_ = getDefaultInstance().getAddrStr();
        onChanged();
        return this;
      }
      /**
       * <code>optional string addrStr = 9;</code>
       *
       * <pre>
       * 位置的文字描述信息
       * </pre>
       */
      public Builder setAddrStrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        addrStr_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.xiaoxiancai.imhere.server.business.protos.Location)
    }

    static {
      defaultInstance = new Location(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.xiaoxiancai.imhere.server.business.protos.Location)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_xiaoxiancai_imhere_server_business_protos_Location_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_xiaoxiancai_imhere_server_business_protos_Location_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024LocationProtos.proto\022-org.xiaoxiancai." +
      "imhere.server.business.protos\"\245\001\n\010Locati" +
      "on\022\016\n\006userId\030\001 \002(\005\022\017\n\007locType\030\002 \002(\005\022\020\n\010l" +
      "atitude\030\003 \002(\001\022\021\n\tLongitude\030\004 \002(\001\022\r\n\005spee" +
      "d\030\005 \001(\002\022\020\n\010altitude\030\006 \001(\001\022\021\n\thasRadius\030\007" +
      " \001(\010\022\016\n\006radius\030\010 \001(\002\022\017\n\007addrStr\030\t \001(\tB?\n" +
      "-org.xiaoxiancai.imhere.common.protos.bu" +
      "sinessB\016LocationProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_org_xiaoxiancai_imhere_server_business_protos_Location_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_xiaoxiancai_imhere_server_business_protos_Location_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_xiaoxiancai_imhere_server_business_protos_Location_descriptor,
        new java.lang.String[] { "UserId", "LocType", "Latitude", "Longitude", "Speed", "Altitude", "HasRadius", "Radius", "AddrStr", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
